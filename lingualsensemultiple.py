{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.12","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":10279158,"sourceType":"datasetVersion","datasetId":6360636},{"sourceId":209728,"sourceType":"modelInstanceVersion","isSourceIdPinned":true,"modelInstanceId":178820,"modelId":201115}],"dockerImageVersionId":30822,"isInternetEnabled":true,"language":"python","sourceType":"script","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-12-26T13:35:53.610239Z\",\"iopub.execute_input\":\"2024-12-26T13:35:53.610486Z\",\"iopub.status.idle\":\"2024-12-26T13:35:54.099881Z\",\"shell.execute_reply.started\":\"2024-12-26T13:35:53.610462Z\",\"shell.execute_reply\":\"2024-12-26T13:35:54.098613Z\"}}\nimport numpy as np\nimport pandas as pd\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-12-26T13:35:54.101999Z\",\"iopub.execute_input\":\"2024-12-26T13:35:54.102498Z\",\"iopub.status.idle\":\"2024-12-26T13:35:54.662555Z\",\"shell.execute_reply.started\":\"2024-12-26T13:35:54.102471Z\",\"shell.execute_reply\":\"2024-12-26T13:35:54.661178Z\"}}\ndf = pd.read_csv('/kaggle/input/lingualsense/merged_dataset.csv')\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-12-26T13:35:54.664264Z\",\"iopub.execute_input\":\"2024-12-26T13:35:54.664580Z\",\"iopub.status.idle\":\"2024-12-26T13:35:54.674691Z\",\"shell.execute_reply.started\":\"2024-12-26T13:35:54.664552Z\",\"shell.execute_reply\":\"2024-12-26T13:35:54.673213Z\"}}\ndf.rename(columns={'Text': 'text', 'Language': 'language'}, inplace=True)\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-12-26T13:35:54.675630Z\",\"iopub.execute_input\":\"2024-12-26T13:35:54.675939Z\",\"iopub.status.idle\":\"2024-12-26T13:35:54.720132Z\",\"shell.execute_reply.started\":\"2024-12-26T13:35:54.675908Z\",\"shell.execute_reply\":\"2024-12-26T13:35:54.718538Z\"}}\ndf.info()\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-12-26T13:35:54.722635Z\",\"iopub.execute_input\":\"2024-12-26T13:35:54.723046Z\",\"iopub.status.idle\":\"2024-12-26T13:35:54.795557Z\",\"shell.execute_reply.started\":\"2024-12-26T13:35:54.723003Z\",\"shell.execute_reply\":\"2024-12-26T13:35:54.794362Z\"}}\ndf.describe()\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-12-26T13:35:54.797256Z\",\"iopub.execute_input\":\"2024-12-26T13:35:54.797565Z\",\"iopub.status.idle\":\"2024-12-26T13:35:54.806577Z\",\"shell.execute_reply.started\":\"2024-12-26T13:35:54.797540Z\",\"shell.execute_reply\":\"2024-12-26T13:35:54.805520Z\"}}\ndf.head()\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-12-26T13:35:54.807710Z\",\"iopub.execute_input\":\"2024-12-26T13:35:54.808000Z\",\"iopub.status.idle\":\"2024-12-26T13:35:54.832722Z\",\"shell.execute_reply.started\":\"2024-12-26T13:35:54.807975Z\",\"shell.execute_reply\":\"2024-12-26T13:35:54.831326Z\"}}\ndf\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-12-26T13:35:54.834215Z\",\"iopub.execute_input\":\"2024-12-26T13:35:54.834640Z\",\"iopub.status.idle\":\"2024-12-26T13:35:54.864627Z\",\"shell.execute_reply.started\":\"2024-12-26T13:35:54.834604Z\",\"shell.execute_reply\":\"2024-12-26T13:35:54.863369Z\"}}\ndf.isna().sum()\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-12-26T13:35:54.866103Z\",\"iopub.execute_input\":\"2024-12-26T13:35:54.866483Z\",\"iopub.status.idle\":\"2024-12-26T13:35:55.392000Z\",\"shell.execute_reply.started\":\"2024-12-26T13:35:54.866449Z\",\"shell.execute_reply\":\"2024-12-26T13:35:55.390697Z\"}}\nfrom sklearn.preprocessing import LabelEncoder\n\nlabel_encoder = LabelEncoder()\ndf['language_encoded'] = label_encoder.fit_transform(df['language'])\n\nprint(dict(zip(label_encoder.classes_, label_encoder.transform(label_encoder.classes_))))\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-12-26T13:35:55.393062Z\",\"iopub.execute_input\":\"2024-12-26T13:35:55.393498Z\",\"iopub.status.idle\":\"2024-12-26T13:35:55.398542Z\",\"shell.execute_reply.started\":\"2024-12-26T13:35:55.393473Z\",\"shell.execute_reply\":\"2024-12-26T13:35:55.397455Z\"}}\nimport re\n\ndef split_text(text):\n    return re.split(r'[.!?]', text)  # Split by punctuation\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-12-26T13:35:55.399609Z\",\"iopub.execute_input\":\"2024-12-26T13:35:55.400000Z\",\"iopub.status.idle\":\"2024-12-26T13:35:55.420262Z\",\"shell.execute_reply.started\":\"2024-12-26T13:35:55.399966Z\",\"shell.execute_reply\":\"2024-12-26T13:35:55.418778Z\"}}\nsample_text = \"Hello world! வணக்கம் உலகம்! Bonjour le monde.\"\nchunks = split_text(sample_text)\nprint(chunks)\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-12-26T13:35:55.421694Z\",\"iopub.execute_input\":\"2024-12-26T13:35:55.422184Z\",\"iopub.status.idle\":\"2024-12-26T13:36:05.461510Z\",\"shell.execute_reply.started\":\"2024-12-26T13:35:55.422156Z\",\"shell.execute_reply\":\"2024-12-26T13:36:05.460390Z\"}}\nimport pickle\nfrom tensorflow.keras.models import load_model\n\n# Load GRU model\nmodel = load_model('/kaggle/input/lingualsensesingle/tensorflow2/default/1/language_detection_gru.h5')\n\n# Load TF-IDF vectorizer\nwith open('/kaggle/input/lingualsensesingle/tensorflow2/default/1/tfidf_vectorizer.pkl', 'rb') as f:\n    tfidf = pickle.load(f)\n\n# Load LabelEncoder\nwith open('/kaggle/input/lingualsensesingle/tensorflow2/default/1/label_encoder.pkl', 'rb') as f:\n    label_encoder = pickle.load(f)\n\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-12-26T13:36:05.462832Z\",\"iopub.execute_input\":\"2024-12-26T13:36:05.463494Z\",\"iopub.status.idle\":\"2024-12-26T13:36:05.711079Z\",\"shell.execute_reply.started\":\"2024-12-26T13:36:05.463449Z\",\"shell.execute_reply\":\"2024-12-26T13:36:05.709789Z\"}}\ndef detect_language_gru(text):\n\n    chunks = split_text(text)\n    detected_languages = []\n\n    for chunk in chunks:\n        if chunk.strip():  # Ignore empty chunks\n            # Transform chunk into TF-IDF features\n            input_tfidf = tfidf.transform([chunk]).toarray()\n\n            # Handle out-of-vocabulary chunks\n            if input_tfidf.sum() == 0:\n                detected_languages.append(\"Unknown (OOV)\")\n            else:\n                # Predict language\n                prediction = model.predict(input_tfidf)\n                predicted_label = label_encoder.inverse_transform([prediction.argmax()])[0]\n                detected_languages.append(predicted_label)\n\n    return detected_languages\n\n# Test with sample text\nresult = detect_language_gru(\"sebes joseph pereira thomas வணக்கம் உலகம்! Bonjour le monde.\")\nprint(result)\n","metadata":{"_uuid":"4f9d8cfe-469c-4e1c-8479-e75518135abf","_cell_guid":"7004ab30-0371-4319-8e7d-a33f1141b5f4","trusted":true,"collapsed":false,"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null}]}